<?php

/**
 * Membre
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    Annuaire
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class Membre extends BaseMembre
{
  public function __toString() {
    if($this->getPrenom() != '' || $this->getNom() != '')
      return $this->getPrenom().' '.$this->getNom();
    else
      return ' ('.$this->getUsername().')';
  }

  public function getFullString() {
    if($this->getPrenom() != '' || $this->getNom() != '')
      return $this->getPrenom().' '.$this->getNom().' ('.$this->getUsername().')';
    else
      return ' ('.$this->getUsername().')';
  }

  public function isAdmin() {
    return ($this->getStatus()=='Administrateur');
  }

  public function isMembre() {
    return ($this->getStatus()=='Membre');
  }

  public function isAncien() {
    return ($this->getStatus()=='Ancien');
  }

  public function save(Doctrine_Connection $conn = null)
  {
    if(strlen($this->getPasswd()) != 40)
      $this->setPasswd(sha1($this->getPasswd()));

    if($this->getUsername() == '')
    {
      $nom = $this->getNom();
      $prenom = $this->getPrenom();
      $this->setUsername(strtolower($prenom[0].'.'.$nom));
    }

    if($this->getEmailInterne() == '')
    {
      $this->setEmailInterne($this->getUsername().'@iariss.fr');
    }

    $this->setTelMobile(wordwrap($this->getTelMobile(), 2, ' ', true));
    $this->setTelFixe(wordwrap($this->getTelFixe(), 2, ' ', true));

    return parent::save($conn);
  }

  public static function getProfile($username)
  {
    return Doctrine::getTable('Membre')
          ->createQuery('m')
          ->select('m.id, m.status')
          ->where('m.username = ?', array($username))
          ->execute()->getFirst();
  }
  
  public function setCotisation($value)
  {
    $cotisations = $this->getCotisations();

    if($value && $cotisations->count() == 0)
    {
      $cotisation = new Cotisation();
      $cotisation->setMembreId($this->getId());
      $cotisation->setAnnee(Tools::getAnneeCourante());
      $cotisations->add($cotisation);
    }

    if(!$value && $cotisations->count() > 0)
    {
      $cotisations->delete();
    }
  }

  public function getCotisation()
  {
    $cotisations = $this->getCotisations();
    $annee = Tools::getAnneeCourante();

    foreach($cotisations as $cotisation)
    {
      if($cotisation->getAnnee() == $annee)
      {
        return true;
      }
    }

    return false;
  }

  public function setQuittance($value)
  {
    $quittances = $this->getQuittances();

    if($value && $quittances->count() == 0)
    {
      $quittance = new Quittance();
      $quittance->setMembreId($this->getId());
      $quittance->setAnnee(Tools::getAnneeCourante());
      $quittances->add($quittance);
    }

    if(!$value && $quittances->count() > 0)
    {
      $quittances->delete();
    }
  }

  public function getQuittance()
  {
    $quittances = $this->getQuittances();
    $annee = Tools::getAnneeCourante();

    foreach($quittances as $quittance)
    {
      if($quittance->getAnnee() == $annee)
      {
        return true;
      }
    }

    return false;
  }
}

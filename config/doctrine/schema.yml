# config/doctrine/schema.yml

## Module Annuaire ##
Membre:
  actAs: { Timestampable: ~ }
  columns:
    username:            { type: string(50), unique: true }
    passwd:              { type: string(50), notnull:true }

    # info Sec
    numero_etudiant:     { type: integer }
    prenom:              { type: string(255), notnull: true }
    nom:                 { type: string(255), notnull: true }
    sexe:                { type: enum, values: [Homme, Femme], notnull: true }
    date_naissance:      { type: date, notnull: true }
    ville_naissance:     { type: string(255), notnull: true }
    numero_secu:         { type: string(21) }

    # Divers
    promo:               { type: integer, notnull: true }
    filiere:             { type: enum, values: [Informatique, Automatique, Mécanique, Textile, Système de prod], notnull: true }
    poste:               { type: string(50) }
    photo:               { type: string(50) }

    # adresses
    adresse_mulhouse:    { type: string(4000), notnull: true }
    cp_mulhouse:         { type: integer, notnull: true }
    ville_mulhouse:      { type: string(255), notnull: true }
    adresse_parents:     { type: string(4000) }
    cp_parents:          { type: integer }
    ville_parents:       { type: string(255) }

    # communication
    tel_mobile:          { type: string(255), notnull: true }
    tel_fixe:            { type: string(255) }
    email_interne:       { type: string(255) }
    email_externe:       { type: string(255) }

    # Statut Sec
    carte_ID:            { type: boolean, default: false, notnull: true }
    just_domicile:       { type: boolean, default: false, notnull: true }
    reglement_interieur: { type: boolean, default: false, notnull: true }
    convention_etudiant: { type: boolean, default: false, notnull: true }

    status:              { type: enum, notnull: true, default: Membre, values: [Administrateur, Membre, Ancien] }

  relations:
    Projets:             { class: Projet, refClass: LienMembreProjet, local: membre_id, foreign: projet_id }
    LiensMembreProjet:   { class: LienMembreProjet, local: id, foreign: membre_id, type: many }
    Cotisations:         { class: Cotisation, local: id, foreign: membre_id, type: many }
    Quittances:          { class: Quittance, local: id, foreign: membre_id, type: many }

Cotisation:
  actAs: { Timestampable: ~ }
  columns:
    membre_id:           { type: integer, notnull: true }
    annee:               { type: integer, notnull: true }
  relations:
    Membre:              { local: membre_id, foreign: id, type: one }

Quittance:
  actAs: { Timestampable: ~ }
  columns:
    membre_id:           { type: integer, notnull: true }
    annee:               { type: integer, notnull: true }
  relations:
    Membre:              { local: membre_id, foreign: id, type: one }

## Module Prospection ##
Prospect:
  actAs: { Timestampable: ~ }
  columns:
    nom:                { type: string(255), notnull: true }
    contact:            { type: string(255) }
    fonction:           { type: string(255) }
    adresse:            { type: string(255) }
    ville:              { type: string(255) }  # Pour les stats
    cp:                 { type: string(255) }  # Pour les stats
    tel_fixe:           { type: string(255) }  # et si plusieurs ? Mobile/fixe au moins
    tel_portable:       { type: string(255) }
    email:              { type: string(255) }
    site_web:           { type: string(255) }
    origine:            { type: string(255) }
    a_rappeler:         { type: boolean, default: true }
    date_recontact:     { type: date }
    commentaire:        { type: string(4000) } # "Il faut parler fort, il est sourd", etc.
    activite:           { type: string(4000) }
  relations:
    Contacts:           { class: Contact, local: id, foreign: prospect_id, type: many }

Contact:
  actAs: { Timestampable: ~ }
  columns:
    date:               { type: date, notnull: true }
    commentaire:        { type: string(4000) }
    prospect_id:        { type: integer, notnull: true }
    membre_id:          { type: integer, notnull: true }
    type_contact_id:    { type: integer, notnull: true }
  relations:
    Prospect:           { local: prospect_id,   foreign: id, type: one }
    Membre:             { local: membre_id,     foreign: id, type: one }
    TypeContact:        { local: type_contact_id, foreign: id, type: one }

TypeContact:
  columns:
    nom:   { type: string(255) }
    logo:  { type: string(255) }

## Module Projet ##
Projet:
  actAs: { Timestampable: ~ , SoftDelete: ~}
  columns:
    numero:             { type: integer, notnull: true}
    nom:                { type: string(50), notnull: true }
    date_debut:         { type: date }
    date_cloture:       { type: date }
    commentaire:        { type: text }
    budget:             { type: real }
    delai_realisation:  { type: integer }
    avancement:         { type: real }
    qualite:            { type: real }

    prospect_id:        { type: integer, notnull: true }

  relations:
    Prospect:           { local: prospect_id, foreign: id, type: one }
    LienMembreProjets:  { local: id, foreign: projet_id, type: many }
    Participants:       { class: Membre, refClass: LienMembreProjet, local: projet_id, foreign: membre_id }

LienMembreProjet:
  columns:
    role:               { type: enum, values: [Chef de projet, Intervenant, Commercial, Contact, Redacteur], notnull: true }
    JEH:                { type: integer, notnull: true }
    commentaire:        { type: string(100) }
    projet_id:          { type: integer, notnull: true }
    membre_id:          { type: integer, notnull: true }
  relations:
    Membre:             { local: membre_id, foreign: id, type: one }
    Projet:             { local: projet_id, foreign: id, type: one }

ProjetEvent:
  actAs: { Timestampable: ~ }
  columns:
    date:               { type: date }
    commentaire:        { type: string(4000) }
    url:                { type: string(255) }
    type_id:            { type: integer, notnull: true }
    membre_id:          { type: integer, notnull: true }
    membreread_id:      { type: integer }
    projet_id:          { type: integer, notnull: true }
  relations:
    ProjetEventType:    { local: type_id, foreign: id, type: one }
    ProjetEventCom:     { local: id, foreign: projet_event_id, type: many }
    Membre:             { local: membre_id, foreign: id, type: one }
    Membreread:         { local: membreread_id, foreign: id, class: Membre, type: one }
    Projet:             { local: projet_id, foreign: id, type: one }

ProjetEventType:
  columns:
    abreviation:        { type: string(10) }
    description:        { type: string(50) }
    ordre:              { type: integer }
    obligatoire:        { type: integer }
